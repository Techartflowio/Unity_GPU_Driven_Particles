// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#pragma kernel Init
#define THREAD_COUNT 256
#include "common.hlsli"

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
RWStructuredBuffer<Particle> particles;
AppendStructuredBuffer<uint> pools;


[numthreads(THREAD_COUNT, 1, 1)]
void Init(uint3 id : SV_DispatchThreadID)
{
    particles[id.x].alive = false;
    pools.Append(id.x);
}


[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}
